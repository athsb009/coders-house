name: Development Workflow

on:
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'

jobs:
  # Code Quality Check
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies (Root)
      run: npm ci --legacy-peer-deps
      
    - name: Install dependencies (Types)
      run: cd types && npm ci --legacy-peer-deps
      
    - name: Install dependencies (Client)
      run: cd client && npm ci --legacy-peer-deps
      
    - name: Type check (Server)
      run: cd server && npx tsc --noEmit --project tsconfig.server.json
      
    - name: Type check (Client)
      run: cd client && npx tsc --noEmit
      
    - name: Lint (Server)
      run: cd server && npx eslint . --ext .ts
      
    - name: Lint (Client)
      run: cd client && npx eslint . --ext .ts,.tsx
      
    - name: Check formatting
      run: |
        cd client && npx prettier --check .
        cd ../server && npx prettier --check .

  # Build Test
  build-test:
    name: Build Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies (Root)
      run: npm ci --legacy-peer-deps
      
    - name: Install dependencies (Types)
      run: cd types && npm ci --legacy-peer-deps
      
    - name: Install dependencies (Client)
      run: cd client && npm ci --legacy-peer-deps
      
    - name: Build client
      run: cd client && npm run build
      
    - name: Build server
      run: npm run build
      
    - name: Verify build artifacts
      run: |
        ls -la client/dist/
        ls -la server/dist/

  # Security Check
  security:
    name: Security Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies (Root)
      run: npm ci --legacy-peer-deps
      
    - name: Install dependencies (Client)
      run: cd client && npm ci --legacy-peer-deps
      
    - name: Run security audit
      run: npm audit --audit-level moderate
      
    - name: Run client security audit
      run: cd client && npm audit --audit-level moderate

  # Performance Check
  performance:
    name: Performance Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies (Client)
      run: cd client && npm ci --legacy-peer-deps
      
    - name: Build client
      run: cd client && npm run build
      
    - name: Check bundle size
      run: |
        cd client
        echo "Checking bundle size..."
        du -sh dist/
        find dist/ -name "*.js" -exec wc -c {} + | sort -n 